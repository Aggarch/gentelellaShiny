{
  "name": "Gentelella Shiny",
  "tagline": "This is an R Shiny HTML Template version of the gentelella bootstrap theme.",
  "body": "# gentelellaShiny\r\n\r\n[![Travis-CI Build Status](https://travis-ci.org/MarkEdmondson1234/gentelellaShiny.svg?branch=master)](https://travis-ci.org/MarkEdmondson1234/gentelellaShiny)\r\n\r\nThis is an R [Shiny HTML Template](http://shiny.rstudio.com/articles/templates.html) version of the [gentelella bootstrap theme](https://github.com/puikinsh/gentelella).\r\n\r\n## Features\r\n\r\n* A unique looking Shiny dashboard\r\n* Login authentication page (requires [`googleAuthR`](https://github.com/MarkEdmondson1234/googleAuthR))\r\n* Profile name and picture pulled from G+ (requires [`googleID`](https://github.com/MarkEdmondson1234/googleID))\r\n* Dynamic headline tiles\r\n* Dynamic progress bar visualisation\r\n* Custom box for plots including date picker in header\r\n* Custom collapsible box for dashboard elements\r\n\r\nA demo app for viewing GoogleAnalytics data is available by running `runExample()`\r\n\r\n## Screenshot after logging in\r\n\r\nThe demo uses `googleAnalyticsR` to download data, so won't look like much if you login with an account with no GA :)  Replace with your own data source and everything else will work though. \r\n\r\n![](https://github.com/MarkEdmondson1234/gentelellaShiny_nopackage/raw/master/gentellelaShinydemo.png)\r\n\r\n## Install\r\n\r\n```r\r\ndevtools::install_github(\"MarkEdmondson1234/gentelellaShiny\")\r\n```\r\n\r\nFor logins you also need `GoogleID`\r\n\r\n```r\r\ndevtools::install_github(\"MarkEdmondson1234/googleID\")\r\n```\r\n\r\nFor the demo to work it uses `googleAnalyticsR`\r\n\r\n```r\r\ninstall.packages(\"googleAnalyticsR\")\r\n```\r\n\r\n## Elements\r\n\r\n\r\n### Top tiles\r\n\r\nA tile to show headline metrics\r\n\r\n![](https://github.com/MarkEdmondson1234/gentelellaShiny_nopackage/raw/master/top_tiles.png)\r\n\r\n### Plot Box\r\n\r\nA box with datepicker for plots\r\n\r\n![](https://github.com/MarkEdmondson1234/gentelellaShiny_nopackage/blob/master/plot_box.png)\r\n\r\n### Collapsible box\r\n\r\nA box to display other dashboard content\r\n\r\n![](https://github.com/MarkEdmondson1234/gentelellaShiny_nopackage/blob/master/dash_box.png)\r\n\r\n\r\n### Progress bars\r\n\r\nFor showing things like performance against target\r\n\r\n![](https://github.com/MarkEdmondson1234/gentelellaShiny_nopackage/blob/master/progress_bars.png)\r\n\r\n### Other Shiny elements\r\n\r\nAny other Shiny UI elements can also be used, including `htmlwidgets`.  A couple of examples are shown below:\r\n\r\n#### Google Analytics dropdown\r\n\r\nFrom `googleAnalyticsR`, a UI to selet GA view:\r\n\r\n![](https://github.com/MarkEdmondson1234/gentelellaShiny_nopackage/blob/master/ga_dropdown.png)\r\n\r\n#### Gauge\r\n\r\nFrom `flexdashboards`:\r\n\r\n![](https://github.com/MarkEdmondson1234/gentelellaShiny_nopackage/blob/master/guage_demo.png)\r\n\r\n## To use\r\n\r\nA special function `gentelellaPage()` has been created that you pass normal ui.R elements to, that will then render each parameter in order to each row of content on the page.\r\n\r\nIf you want more items to appear in one row, then pass them in a `shiny::tagList`\r\n\r\nExample:\r\n\r\n### In ui.R\r\n\r\n```r\r\n## to appear in one row\r\nboxRow <- tagList(\r\n  dashboard_box(uiOutput(\"progress_bar2\"), box_title = \"Targets\"),\r\n  dashboard_box(gaugeOutput(\"gauge1\"), box_title = \"Flexdashboard Gauge\", menuItems = NULL),\r\n  dashboard_box(p(\"More interesting stuff\"))\r\n)\r\n\r\n## each parameter holds UI elements that are rendered per row in order down the content page\r\ngentelellaPage(\r\n  column(width = 12, googleAnalyticsR::authDropdownUI(\"auth_dropdown\")),\r\n  tileCountRow(tileCountUI(\"e1\"), tileCountUI(\"e2\"), tileCountUI(\"e3\"),\r\n               tileCountUI(\"e4\"), tileCountUI(\"e5\"), tileCountUI(\"e6\")),\r\n  graph_box(dygraphOutput(\"trend_plot\"),\r\n            datepicker = dateRangeInput(\"datepicker_id\", NULL, start = Sys.Date() - 300)),\r\n  boxRow\r\n)\r\n\r\n```\r\n\r\n`gentelellaPage()` also includes some named parameters to set options such as sidebar menu items, title tag and footer images.\r\n\r\n```r\r\n## create menu items for sidebar using sidebarElement\r\nmenuItems <- list(\r\n  sideBarElement(\" Home \",\r\n                 icon = icon(\"home\"),\r\n                 list(a(href=\"index.html\", \"Dashboard\"),\r\n                      a(href=\"index2.html\", \"Dashboard2\"),\r\n                      a(href=\"index3.html\", \"Dashboard3\"))                        \r\n  ),\r\n  sideBarElement(\" Contact \",\r\n                 icon = icon(\"envelope\"),\r\n                 list(a(href=\"http://twitter.com/HoloMarkeD\", \r\n                        HTML(paste(icon(\"twitter\"), \"@HoloMarkeD\"))),\r\n                      a(href=\"http://code.markedmondson.me\", \r\n                        HTML(paste(icon(\"rss\"), \" Blog\"))),\r\n                      a(href=\"https://github.com/MarkEdmondson1234/gentelellaShiny\", \r\n                        HTML(paste(icon(\"github\"), \" Github\"))))                        \r\n  ),\r\n  sideBarElement(column(width = 12, googleAuthR::googleAuthUI(\"auth\"),\r\n                        icon = NULL)\r\n  ))\r\n\r\ngentelellaPage(\r\n  tileCountRow(tileCountUI(\"e1\"), tileCountUI(\"e2\"), tileCountUI(\"e3\"),\r\n               tileCountUI(\"e4\"), tileCountUI(\"e5\"), tileCountUI(\"e6\")),\r\n  \r\n  ## start named parameters:\r\n  menuItems = menuItems,\r\n  title_tag = \"Shiny HTML Template\",\r\n  site_title = a(class=\"site_title\", icon(\"eye\"), span(\"Shiny HTML\")),\r\n  footer = \"Made in Denmark\"\r\n)\r\n```\r\n\r\nThere is no support for different layouts other than the defaults in `gentelellaPage()`, in that case use `shiny::htmlTemplate` directly and edit `index.html` to include your R code blocks in `{{ brackets }}`\r\n\r\n### Example files\r\n\r\nA demo app for viewing GoogleAnalytics data is available by running `runExample()`.  \r\n\r\nIt will start up a login page and a (logged out) Shiny dashboard.  Use the login page or the login button on the Shiny app to start. \r\n\r\nIn production the Shiny app would be running on a server and user's start at the login page.\r\n\r\n### Login page\r\n\r\n`googleAuthUI` creates a login URL that includes a security code.  \r\n\r\nSet the security code to be static (default it changes each launch of `googleAuthR`) via options, e.g. `options(googleAuthR.securitycode = \"gentelellXXXXXXX\")` in the top of `server.R`\r\n\r\nGenerate the login URL with the security code, and use as the login link in the `login.html` file.\r\n\r\n![](https://github.com/MarkEdmondson1234/gentelellaShiny_nopackage/blob/master/googleLogin.png)\r\n\r\nThe `login.html` file can then be used for logins, with the Shiny app holding logic to not show content without logging in (e.g. `req(auth())`)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}